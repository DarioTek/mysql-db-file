use financedb;

CREATE TABLE IF NOT EXISTS NEWS_SENTIMENT (
    SYMBOL VARCHAR(100) NOT NULL,
    RECORD_DATE DATETIME,
    GOOGLE_NEWS_HEADLINES VARCHAR(10000),
    SENTIMENT_SCORE VARCHAR(100),
	OVERALL_SENTIMENT VARCHAR(100),
    PRIMARY KEY (SYMBOL, RECORD_DATE)
);

ALTER TABLE NEWS_SENTIMENT
MODIFY COLUMN RECORD_DATE DATE;

ALTER TABLE NEWS_SENTIMENT
ADD COLUMN SENTIMENT_SCORE VARCHAR(100);

DESC NEWS_SENTIMENT;

# ALTER TABLE NEWS_SENTIMENT DROP COLUMN VADER_SENTIMENT_RATING;

SELECT SYMBOL, GOOGLE_NEWS_HEADLINES, OVERALL_SENTIMENT FROM NEWS_SENTIMENT WHERE RECORD_DATE = (SELECT MAX(RECORD_DATE) FROM NEWS_SENTIMENT);

SELECT 
	SYMBOL, OVERALL_SENTIMENT, GOOGLE_NEWS_HEADLINES, SENTIMENT_SCORE, RECORD_DATE 
FROM 
	NEWS_SENTIMENT 
WHERE 
	RECORD_DATE = (SELECT MAX(RECORD_DATE) FROM NEWS_SENTIMENT);

SELECT * FROM NEWS_SENTIMENT ORDER BY RECORD_DATE DESC;

SELECT * FROM NEWS_SENTIMENT;


CREATE TEMPORARY TABLE latest_records AS
SELECT SYMBOL, DATE(RECORD_DATE) as RECORD_DATE, MAX(RECORD_DATE) as max_datetime
FROM NEWS_SENTIMENT
GROUP BY SYMBOL, DATE(RECORD_DATE);

SET SQL_SAFE_UPDATES = 0; # DISABLE SAFE UPDATE 

DELETE n1 FROM NEWS_SENTIMENT n1
INNER JOIN latest_records n2 ON n1.SYMBOL = n2.SYMBOL AND DATE(n1.RECORD_DATE) = n2.RECORD_DATE
WHERE n1.RECORD_DATE < n2.max_datetime;

COMMIT;

DROP TEMPORARY TABLE latest_records;
